#
# Default output
#

pcm.!default {
	@args [ CARD ]
	@args.CARD {
		type string
		default {
			@func getenv
			vars [
				ALSA_PCM_CARD
				ALSA_CARD
			]
			default {
				@func refer
				name defaults.pcm.card
			}
		}
	}
	@args.DEV {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_PCM_DEVICE
			]
			default {
				@func refer
				name defaults.pcm.device
			}
		}
	}
	@args.SUBDEV {
		type integer
		default {
			@func refer
			name defaults.pcm.subdevice
		}
	}
	type plug
    slave.pcm "softvol"
	type hw
	card $CARD
	device $DEV
	subdevice $SUBDEV
	hint {
		show {
			@func refer
			name defaults.namehint.extended
		}
		description "Direct hardware device without any conversions"
	}
}

pcm.softvol-system {
  @args [ CARD ]
  type softvol
  slave.pcm "dmix"
  control {
    name "PCM system volume"
    card $CARD
  }
}

pcm.softvol-music {
  @args [ CARD ]
  type softvol
  slave.pcm "dmix"
  control {
    name "PCM music volume"
    card $CARD
  }
}

pcm.softvol-navi {
  @args [ CARD ]
  type softvol
  slave.pcm "dmix"
  control {
    name "PCM navi volume"
    card $CARD
  }
}

pcm.softvol-btcall {
  @args [ CARD ]
  type softvol
  slave.pcm "dmix"
  control {
    name "PCM bt call volume"
    card $CARD
  }
}

pcm.softvol-btmusic {
  @args [ CARD ]
  type softvol
  slave.pcm "dmix"
  control {
    name "PCM bt music volume"
    card $CARD
  }
}

pcm.mic-normal {
    type dsnoop
    ipc_key 5978293
    slave {
        pcm "hw:0,0" 
        channels 2 
    }
}

pcm.mic-dvr {
    type dsnoop
    ipc_key 5978293
    slave {
        pcm "hw:0,0" 
        channels 2 
    }
}

pcm.mic-btcall {
    type dsnoop
    ipc_key 5978293
    slave {
        pcm "hw:0,0" 
        channels 2 
    }
}